---
AWSTemplateFormatVersion: "2010-09-09"
Description: Creates a VPC with /16 CIDR Block with public, private, and isolated subnets complete with NAT gateways, route tables, and nACLs
Parameters:
  VPCName:
    Type: String
    Description:  Name of the VPC.  Will be used in tagging VPC components
    MinLength: 8
    MaxLength: 250
  CIDR:
    Type: String
    Description: VPC /16 CIDR block
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.0\.0\/16$
    ConstraintDescription: must be valid IPv4 and end in .0.0/16
  DNSSupport:
    Type: String
    Description: Enable VPC DNS support
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  DNSHostanmes:
    Type: String
    Description: Enable VPC DNS hostnames
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  InstanceTenancy:
    Type: String
    Default: default
    AllowedValues:
    - default
    - dedicated
    Description: VPC instance tenancy
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: CIDR
      EnableDnsHostnames:
        Ref: DNSHostanmes
      EnableDnsSupport:
        Ref: DNSSupport
      InstanceTenancy:
        Ref: InstanceTenancy
      Tags:
        - Key: Name
          Value:
            Ref: VPCName
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            !Join
            - '_'
            - - Ref: VPCName
              - IGW
  VpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: IGW
      VpcId:
        Ref: VPC
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            !Join
            - '_'
            - - Ref: VPCName
              - PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGW
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        !Select
        - 0
        - !GetAZs
            Ref: AWS::Region
      CidrBlock:
        !Select
        - 0
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - PublicSubnetA
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicSubnetRouteTable
      SubnetId:
        Ref: PublicSubnetA
  EIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPA.AllocationId
      SubnetId:
        Ref: PublicSubnetA
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - NatGatewayA
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        !Select
        - 1
        - !GetAZs
            Ref: AWS::Region
      CidrBlock:
        !Select
        - 1
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - PublicSubnetB
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicSubnetRouteTable
      SubnetId:
        Ref: PublicSubnetB
  EIPB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPB.AllocationId
      SubnetId:
        Ref: PublicSubnetB
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - NatGatewayB
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        !Select
        - 0
        - !GetAZs
            Ref: AWS::Region
      CidrBlock:
        !Select
        - 2
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - PrivateSubnetA
  PrivateSubnetARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            !Join
            - '_'
            - - Ref: VPCName
              - PrivateSubnetARouteTable
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateSubnetARouteTable
      SubnetId:
        Ref: PrivateSubnetA
  NatGatewayARoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayA
      RouteTableId:
        Ref: PrivateSubnetARouteTable
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        !Select
        - 1
        - !GetAZs
            Ref: AWS::Region
      CidrBlock:
        !Select
        - 3
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - PrivateSubnetB
  PrivateSubnetBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            !Join
            - '_'
            - - Ref: VPCName
              - PrivateSubnetBRouteTable
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateSubnetBRouteTable
      SubnetId:
        Ref: PrivateSubnetB
  NatGatewayBRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayB
      RouteTableId:
        Ref: PrivateSubnetBRouteTable
  IsolatedSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        !Select
        - 0
        - !GetAZs
            Ref: AWS::Region
      CidrBlock:
        !Select
        - 4
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - IsolatedSubnetA
  IsolatedSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        !Select
        - 1
        - !GetAZs
            Ref: AWS::Region
      CidrBlock:
        !Select
        - 5
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value:
          !Join
          - '_'
          - - Ref: VPCName
            - IsolatedSubnetB
